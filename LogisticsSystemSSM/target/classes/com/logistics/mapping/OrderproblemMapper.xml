<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.logistics.dao.OrderproblemMapper">
	<resultMap id="BaseResultMap" type="com.logistics.po.Orderproblem">
		<id column="OrderProblemID" jdbcType="INTEGER" property="orderproblemid" />
		<result column="OrderFormID" jdbcType="INTEGER" property="orderformid" />
		<result column="Reason" jdbcType="VARCHAR" property="reason" />
		<result column="RegistrationTime" jdbcType="TIMESTAMP"
			property="registrationtime" />
		<result column="FormerlyUserID" jdbcType="INTEGER" property="formerlyuserid" />
		<result column="NowUserID" jdbcType="INTEGER" property="nowuserid" />
		<result column="OrderFormLocation" jdbcType="VARCHAR" property="orderformlocation" />
		<result column="IsSolve" jdbcType="BIT" property="issolve" />
		<result column="SolutionID" jdbcType="INTEGER" property="solutionid" />
	</resultMap>
	<resultMap id="OrderproblemVo" type="com.logistics.vo.OrderproblemVo"
		extends="BaseResultMap">
		<result property="motorcadeName" jdbcType="VARCHAR" column="motorcadeName" />
		<result property="userName" jdbcType="VARCHAR" column="userName" />
		<result property="solutionman" jdbcType="VARCHAR" column="solutionman" />
		<result property="motorcadeID" jdbcType="INTEGER" column="motorcadeID" />
		<result property="teamMembersID" jdbcType="INTEGER" column="teamMembersID" />
		<result property="procuratoryID" jdbcType="INTEGER" column="procuratoryID" />
	</resultMap>

	<sql id="Base_Column_List">
		OrderProblemID, OrderFormID, Reason, RegistrationTime,
		FormerlyUserID, NowUserID,
		OrderFormLocation, IsSolve, SolutionID
	</sql>
	<select id="selectByPrimaryKey" parameterType="java.lang.Integer"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from b_orderproblem
		where OrderProblemID =
		#{orderproblemid,jdbcType=INTEGER}
	</select>

	<sql id="orderSql">
		<if test="orderformid!=null and orderformid!=''">
			and b_orderproblem.OrderFormID =#{orderformid}
		</if>
	</sql>
	<select id="findByProbleSQL" resultMap="OrderproblemVo">


		SELECT
		b_orderproblem.*,b_user.UserName,b_teammembers.*,b_procuratory.ProcuratoryID,b_motorcade.MotorcadeName
		FROM
		b_orderproblem
		LEFT JOIN b_user ON
		b_orderproblem.FormerlyUserID=b_user.UserID LEFT
		JOIN b_teammembers ON
		b_user.UserID=b_teammembers.UserID LEFT JOIN b_procuratory ON
		b_orderproblem.OrderFormID=b_procuratory.OrderFormID LEFT JOIN
		b_motorcade ON b_teammembers.MotorcadeID =b_motorcade.MotorcadeID
		WHERE
		b_orderproblem.IsSolve=0
		<include refid="orderSql" />
	</select>



	<select id="findOrderProSQL" resultMap="OrderproblemVo">
		SELECT b_orderproblem.*,b_user.UserName AS solutionman
		FROM
		b_orderproblem LEFT JOIN b_user ON
		b_orderproblem.SolutionID=b_user.UserID
		where 1=1
		<include refid="orderSql" />
	</select>


	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from
		b_orderproblem
		where OrderProblemID =
		#{orderproblemid,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="com.logistics.po.Orderproblem">
		insert into b_orderproblem
		(OrderProblemID, OrderFormID, Reason,
		RegistrationTime, FormerlyUserID,
		NowUserID,
		OrderFormLocation, IsSolve, SolutionID
		)
		values
		(#{orderproblemid,jdbcType=INTEGER}, #{orderformid,jdbcType=INTEGER},
		#{reason,jdbcType=VARCHAR},
		#{registrationtime,jdbcType=TIMESTAMP},
		#{formerlyuserid,jdbcType=INTEGER}, #{nowuserid,jdbcType=INTEGER},
		#{orderformlocation,jdbcType=VARCHAR}, #{issolve,jdbcType=BIT},
		#{solutionid,jdbcType=INTEGER}
		)
	</insert>
	<insert id="insertSelective" parameterType="com.logistics.po.Orderproblem">
		insert into b_orderproblem
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="orderproblemid != null">
				OrderProblemID,
			</if>
			<if test="orderformid != null">
				OrderFormID,
			</if>
			<if test="reason != null">
				Reason,
			</if>
			<if test="registrationtime != null">
				RegistrationTime,
			</if>
			<if test="formerlyuserid != null">
				FormerlyUserID,
			</if>
			<if test="nowuserid != null">
				NowUserID,
			</if>
			<if test="orderformlocation != null">
				OrderFormLocation,
			</if>
			<if test="issolve != null">
				IsSolve,
			</if>
			<if test="solutionid != null">
				SolutionID,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="orderproblemid != null">
				#{orderproblemid,jdbcType=INTEGER},
			</if>
			<if test="orderformid != null">
				#{orderformid,jdbcType=INTEGER},
			</if>
			<if test="reason != null">
				#{reason,jdbcType=VARCHAR},
			</if>
			<if test="registrationtime != null">
				#{registrationtime,jdbcType=TIMESTAMP},
			</if>
			<if test="formerlyuserid != null">
				#{formerlyuserid,jdbcType=INTEGER},
			</if>
			<if test="nowuserid != null">
				#{nowuserid,jdbcType=INTEGER},
			</if>
			<if test="orderformlocation != null">
				#{orderformlocation,jdbcType=VARCHAR},
			</if>
			<if test="issolve != null">
				#{issolve,jdbcType=BIT},
			</if>
			<if test="solutionid != null">
				#{solutionid,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.logistics.po.Orderproblem">
		update b_orderproblem
		<set>
			<if test="orderformid != null">
				OrderFormID = #{orderformid,jdbcType=INTEGER},
			</if>
			<if test="reason != null">
				Reason = #{reason,jdbcType=VARCHAR},
			</if>
			<if test="registrationtime != null">
				RegistrationTime =
				#{registrationtime,jdbcType=TIMESTAMP},
			</if>
			<if test="formerlyuserid != null">
				FormerlyUserID = #{formerlyuserid,jdbcType=INTEGER},
			</if>
			<if test="nowuserid != null">
				NowUserID = #{nowuserid,jdbcType=INTEGER},
			</if>
			<if test="orderformlocation != null">
				OrderFormLocation =
				#{orderformlocation,jdbcType=VARCHAR},
			</if>
			<if test="issolve != null">
				IsSolve = #{issolve,jdbcType=BIT},
			</if>
			<if test="solutionid != null">
				SolutionID = #{solutionid,jdbcType=INTEGER},
			</if>
		</set>
		where OrderProblemID = #{orderproblemid,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.logistics.po.Orderproblem">
		update
		b_orderproblem
		set OrderFormID = #{orderformid,jdbcType=INTEGER},
		Reason = #{reason,jdbcType=VARCHAR},
		RegistrationTime =
		#{registrationtime,jdbcType=TIMESTAMP},
		FormerlyUserID =
		#{formerlyuserid,jdbcType=INTEGER},
		NowUserID =
		#{nowuserid,jdbcType=INTEGER},
		OrderFormLocation =
		#{orderformlocation,jdbcType=VARCHAR},
		IsSolve =
		#{issolve,jdbcType=BIT},
		SolutionID = #{solutionid,jdbcType=INTEGER}
		where OrderProblemID = #{orderproblemid,jdbcType=INTEGER}
	</update>
</mapper>